openapi: 3.0.1
info:
  title: BlueConic public API
  description: "This is the public OpenApi Specification for [BlueConic](https://www.blueconic.com).\
    \ You can find out more about information at [https://spec.openapis.org/oas/latest.html](https://spec.openapis.org/oas/latest.html)."
  termsOfService: https://www.blueconic.com
  contact:
    email: info@blueconic.com
  license:
    name: BlueConic
    url: https://www.blueconic.com/pricing
  version: "1.0"
servers:
- url: "{blueconic-hostname}/rest/v2"
  description: The BlueConic server
tags:
- name: Domains
  description: "The domain API. The following methods allow you to create, modify,\
    \ retrieve properties from, and delete BlueConic domains, channels, and positions."
- name: Profiles
  description: "The profile API. The following methods allow you to create, modify,\
    \ retrieve properties from, and delete BlueConic visitor profiles, as well as\
    \ retrieve BlueConic segment information."
- name: Segments
  description: The segment API. The following methods allow you to retrieve properties
    from segments.
paths:
  /domains/{domain}:
    get:
      tags:
      - Domains
      summary: Get one domain
      description: Retrieves one domain.
      operationId: getDomain
      parameters:
      - name: domain
        in: path
        description: The ID of the domain.
        required: true
        schema:
          type: string
      - name: subSortBy
        in: query
        schema:
          type: string
      - name: subSortOrder
        in: query
        schema:
          type: string
      - name: subStartIndex
        in: query
        schema:
          type: integer
          format: int32
      - name: subCount
        in: query
        schema:
          type: integer
          format: int32
      - name: subFilterValue
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Returns one domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
        "401":
          description: Authentication failed (unauthorized).
        "404":
          description: The domain doesn't exist.
        "503":
          description: The server is too busy to handle the request.
  /domains:
    get:
      tags:
      - Domains
      summary: Get all domains
      description: Retrieves the domains.
      operationId: getDomains
      parameters:
      - name: filterValue
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: startIndex
        in: query
        description: Specifies the index of the first item to include in the result.
        schema:
          type: integer
          format: int32
        example: 0
      - name: count
        in: query
        description: "any number\tSpecifies the number of results to return."
        schema:
          type: integer
          format: int32
        example: 20
      - name: subSortBy
        in: query
        schema:
          type: string
      - name: subSortOrder
        in: query
        schema:
          type: string
      - name: subStartIndex
        in: query
        schema:
          type: integer
          format: int32
      - name: subCount
        in: query
        schema:
          type: integer
          format: int32
      - name: subFilterValue
        in: query
        schema:
          type: string
      - name: expand
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Returns the domains.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domains'
        "401":
          description: Authentication failed (unauthorized).
        "503":
          description: The server is too busy to handle the request.
  /profiles/{profile}:
    get:
      tags:
      - Profiles
      summary: Get one profile
      description: "Retrieves the properties of the specified profile, including the\
        \ IDs of the matching dynamic segments."
      operationId: getProfileAsync
      parameters:
      - name: profile
        in: path
        description: The ID of the BlueConic profile.
        required: true
        schema:
          type: string
        example: any BlueConic Profile UUID.
      - name: expand
        in: query
        description: Expand the information in the result set. Use "profile.permissions.exceptions"
          to include permission level and exception data. Use "profile.timeline" to
          include timeline event information. Use multiple "expand" querystring parameters
          to return combinations.
        schema:
          type: array
          items:
            type: string
        example: "One of: profile.permissions.exceptions profile.timeline"
      - name: properties
        in: query
        description: Only returns the given profile properties in the response.
        schema:
          type: string
        example: Comma separated list of profile property IDs
      - name: lifecycleIds
        in: query
        schema:
          type: array
          items:
            type: string
      - name: replaceIds
        in: query
        schema:
          type: boolean
      - name: allowCache
        in: query
        schema:
          type: boolean
      - name: eventTypeId
        in: query
        description: Filter returned timeline events for a specific type. Only one
          timeline event type ID is allowed.
        schema:
          type: array
          items:
            type: string
        example: ID of the timeline event type
      - name: eventCount
        in: query
        description: The maximum number of timeline events to return.
        schema:
          type: integer
          format: int32
        example: any number
      - name: fromDate
        in: query
        description: Filter to only include timeline events that are dated later than
          this date. The format of fromDate is "2018-01-01T00:00Z" or with a timezone
          offset "2018-01-01T00:00+05:00"
        schema:
          type: string
        example: any date
      - name: toDate
        in: query
        description: Filter to only include timeline events that are dated before
          this date. The format of toDate is "2018-01-01T00:00Z" or with a timezone
          offset "2018-01-01T00:00+05:00"
        schema:
          type: string
        example: any date
      - name: collapse
        in: query
        description: Collapse the information in the result set. Use profile.segments
          to exclude segment information.
        schema:
          type: array
          items:
            type: string
        example: profile.segments
      - name: pseudonymizePII
        in: query
        schema:
          type: boolean
      - name: alt
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Returns the specified profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile'
        "401":
          description: Authentication failed (unauthorized).
        "404":
          description: The specified profile doesn't exist.
        "408":
          description: Request timed out.
        "503":
          description: The server is too busy to handle the request.
  /segments:
    get:
      tags:
      - Segments
      summary: Get all segments
      description: Retrieves the id and name of segments.
      operationId: getSegments
      parameters:
      - name: filterValue
        in: query
        schema:
          type: string
      - name: sortBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: startIndex
        in: query
        description: Specifies the index of the first item to include in the result.
        schema:
          type: integer
          format: int32
        example: any number.
      - name: count
        in: query
        description: Specifies the number of results to return.
        schema:
          type: integer
          format: int32
        example: any number.
      - name: expand
        in: query
        schema:
          type: string
      responses:
        "401":
          description: Authentication failed (unauthorized).
        "200":
          description: Returns the segments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segments'
        "503":
          description: The server is too busy to handle the request.
components:
  schemas:
    UserBean:
      type: object
      properties:
        fullname:
          type: string
        username:
          type: string
    aliases:
      type: object
      properties:
        alias:
          type: array
          items:
            type: string
      required:
      - alias
    channel:
      type: object
      properties:
        aliases:
          $ref: '#/components/schemas/aliases'
        canDelete:
          type: boolean
        creationDate:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/UserBean'
        description:
          type: string
        domainId:
          type: string
        domainName:
          type: string
        favorite:
          type: boolean
        hostname:
          type: string
        id:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedUser:
          $ref: '#/components/schemas/UserBean'
        logo:
          $ref: '#/components/schemas/links'
        name:
          type: string
        positions:
          $ref: '#/components/schemas/positions'
        readOnly:
          type: boolean
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        visitorCount:
          type: integer
          format: int32
    channels:
      type: object
      properties:
        myChannels:
          type: array
          items:
            $ref: '#/components/schemas/channel'
    domain:
      type: object
      properties:
        canDelete:
          type: boolean
        channels:
          $ref: '#/components/schemas/channels'
        creationDate:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/UserBean'
        description:
          type: string
        favorite:
          type: boolean
        group:
          $ref: '#/components/schemas/group'
        groupId:
          type: string
          writeOnly: true
        id:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedUser:
          $ref: '#/components/schemas/UserBean'
        logo:
          $ref: '#/components/schemas/links'
        name:
          type: string
        readOnly:
          type: boolean
        tags:
          type: array
          items:
            type: string
        visitorCount:
          type: integer
          format: int32
    group:
      type: object
      properties:
        id:
          type: string
    link:
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
        type:
          type: string
    links:
      type: object
      properties:
        link:
          type: array
          items:
            $ref: '#/components/schemas/link'
    position:
      type: object
      properties:
        canDelete:
          type: boolean
        creationDate:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/UserBean'
        description:
          type: string
        favorite:
          type: boolean
        id:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedUser:
          $ref: '#/components/schemas/UserBean'
        name:
          type: string
        positionIdentifier:
          type: string
        previewURL:
          type: string
        readOnly:
          type: boolean
        tags:
          type: array
          items:
            type: string
    positions:
      type: object
      properties:
        position:
          type: array
          items:
            $ref: '#/components/schemas/position'
    domains:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/simpleDomain'
    ExceptionDetails:
      type: object
      properties:
        plugins:
          $ref: '#/components/schemas/Plugins'
        profileProperties:
          $ref: '#/components/schemas/ProfileProperties'
    PermissionExceptions:
      type: object
      properties:
        optIn:
          $ref: '#/components/schemas/ExceptionDetails'
        optOut:
          $ref: '#/components/schemas/ExceptionDetails'
    Plugin:
      type: object
      properties:
        id:
          type: string
    Plugins:
      type: object
      properties:
        plugin:
          type: array
          items:
            $ref: '#/components/schemas/Plugin'
    ProfileProperties:
      type: object
      properties:
        profileProperty:
          type: array
          items:
            $ref: '#/components/schemas/ProfileProperty'
    ProfileProperty:
      type: object
      properties:
        id:
          type: string
    Property:
      type: object
      properties:
        id:
          type: string
        strategy:
          type: string
        values:
          type: array
          items:
            type: object
    event:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        date:
          type: string
          format: date-time
        eventTypeId:
          type: string
        id:
          type: string
        identifier:
          type: string
        profileId:
          type: string
        rawJson:
          type: string
        source:
          type: string
        strategy:
          type: string
        triggerOnEventAdded:
          type: boolean
          writeOnly: true
    events:
      type: object
      properties:
        event:
          type: array
          items:
            $ref: '#/components/schemas/event'
    lifecycleStage:
      type: object
      properties:
        lifecycle:
          $ref: '#/components/schemas/simpleDomain'
        stage:
          $ref: '#/components/schemas/simpleDomain'
    lifecycleStages:
      type: object
      properties:
        lifecycleStage:
          type: array
          items:
            $ref: '#/components/schemas/lifecycleStage'
    objective:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
    objectives:
      type: object
      properties:
        objective:
          type: array
          items:
            $ref: '#/components/schemas/objective'
    permissions:
      type: object
      properties:
        exceptions:
          $ref: '#/components/schemas/PermissionExceptions'
        level:
          type: string
    profile:
      type: object
      properties:
        consentedObjectives:
          $ref: '#/components/schemas/objectives'
        creationDate:
          type: string
          format: date-time
        events:
          $ref: '#/components/schemas/events'
        id:
          type: string
        lifecycleStages:
          $ref: '#/components/schemas/lifecycleStages'
        permissions:
          $ref: '#/components/schemas/permissions'
        privacyLegislation:
          type: string
        properties:
          $ref: '#/components/schemas/properties'
        refusedObjectives:
          $ref: '#/components/schemas/objectives'
        replacedBy:
          $ref: '#/components/schemas/replaceBy'
        replaces:
          $ref: '#/components/schemas/replaces'
        segments:
          $ref: '#/components/schemas/segments'
    properties:
      type: object
      properties:
        property:
          type: array
          items:
            $ref: '#/components/schemas/property'
    property:
      type: object
      properties:
        id:
          type: string
        values:
          $ref: '#/components/schemas/values'
    replaceBy:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/profile'
    replaces:
      type: object
      properties:
        profile:
          type: array
          items:
            $ref: '#/components/schemas/profile'
    segment:
      type: object
      properties:
        baseSegments:
          type: array
          items:
            type: string
        canDelete:
          type: boolean
        canExport:
          type: boolean
        creationDate:
          type: string
          format: date-time
        creator:
          $ref: '#/components/schemas/UserBean'
        description:
          type: string
        domains:
          type: array
          items:
            $ref: '#/components/schemas/simpleDomain'
        favorite:
          type: boolean
        filterConfigs:
          type: array
          items:
            type: string
        id:
          type: string
        inverseOf:
          type: string
        inverseOfName:
          type: string
        inversedBy:
          type: string
        inversedByName:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        lastModifiedUser:
          $ref: '#/components/schemas/UserBean'
        name:
          type: string
        readOnly:
          type: boolean
        tags:
          type: array
          items:
            type: string
      required:
      - baseSegments
    segments:
      type: object
      properties:
        itemsPerPage:
          type: integer
          format: int32
        segment:
          type: array
          items:
            $ref: '#/components/schemas/segment'
        startIndex:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int32
    simpleDomain:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    values:
      type: object
      properties:
        value:
          type: array
          items:
            type: string
      required:
      - value
